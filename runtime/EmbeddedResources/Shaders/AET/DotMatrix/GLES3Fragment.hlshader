#version 300 es
//AET/DotMatrix

precision highp float;
precision highp int;

uniform 	float _RotOffset;
uniform 	float _Size;
uniform 	float _Blur;
uniform 	float _hPixels;
uniform 	float _vPixels;
uniform mediump sampler2D _BallsTex;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _SizeMask;
in highp vec2 vs_TEXCOORD0;
out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump float u_xlat16_0;
vec2 u_xlat1;
mediump vec4 u_xlat16_2;
vec2 u_xlat3;
float u_xlat4;
vec3 u_xlat5;
vec2 u_xlat11;
mediump float u_xlat16_15;
void main()
{
    u_xlat0.xyz = vec3(1.0, 1.0, 1.0) / vec3(_hPixels, _vPixels, _Blur);
    u_xlat1.xy = vs_TEXCOORD0.yx / u_xlat0.yx;
    u_xlat11.xy = floor(u_xlat1.yx);
    u_xlat1.xy = (-u_xlat11.yx) + u_xlat1.xy;
    u_xlat0.xy = u_xlat0.xy * u_xlat11.xy;
    u_xlat1.xy = u_xlat1.xy + vec2(-0.5, -0.5);
    u_xlat16_15 = texture(_SizeMask, u_xlat0.xy).x;
    u_xlat16_2 = texture(_MainTex, u_xlat0.xy);
    u_xlat0.x = u_xlat16_15 * _Size;
    u_xlat3.x = sin(_RotOffset);
    u_xlat4 = cos(_RotOffset);
    u_xlat5.xz = u_xlat1.xy * u_xlat3.xx;
    u_xlat3.x = u_xlat4 * u_xlat1.y + (-u_xlat5.x);
    u_xlat3.y = u_xlat4 * u_xlat1.x + u_xlat5.z;
    u_xlat0.xy = u_xlat3.xy / u_xlat0.xx;
    u_xlat0.xy = u_xlat0.xy + vec2(0.5, 0.5);
#ifdef UNITY_ADRENO_ES3
    u_xlat0.xy = min(max(u_xlat0.xy, 0.0), 1.0);
#else
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);
#endif
    u_xlat16_0 = texture(_BallsTex, u_xlat0.xy).x;
    u_xlat0.x = u_xlat0.z * u_xlat16_0;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat5.x = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat5.x;
    u_xlat0 = u_xlat0.xxxx * u_xlat16_2;
    SV_Target0 = u_xlat0;
    return;
}